//-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
/*Breakpoints*/
$bp-context : 16px;
$breakpoints : (
        'xs': em(456px, $bp-context),
        'sm': em(640px, $bp-context),
        'md': em(752px, $bp-context),
        'lg': em(992px, $bp-context),
        'xl': em(1168px, $bp-context)
);

@mixin breakpoint($point) {

  @if map-has-key($breakpoints, $point) {

    @media (max-width : map-get($breakpoints, $point)) {
      @content;
    }
  } @else {
    @warn "The breakpoint #{$point} is not associated with a min-width.";
  }
}
//-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
/*Fonts*/
@mixin mainFont {
  font-family : $main-font-family;
  font-weight : 300;
}
@mixin titleFont {
  font-family : $title-font-family;
  font-weight : 500;
}
@mixin headerFont {
  font-family     : $main-font-family;
  @include fluid-type($min-screen, $max-screen, 16px, 18px);
  text-transform  : uppercase;
  text-decoration : none;
  color           : $light;
  font-weight     : 300;
}
@mixin text-shaddow-1 {
  text-shadow : 0 1px 1px rgba(0, 0, 0, 0.8);
}
@mixin box-shaddow-1 {
  box-shadow : 0px 1px 2px rgba(0, 0, 0, 0.2);
}
//-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
// Animations
@mixin animation-1 {
  transition : all 0.4s ease-out;
}
@mixin animation-2 {
  transition : all 0.2s linear;
}
@mixin animation-3 {
  transition : background-color .2s ease-in;
}
//-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
/*Global*/
@mixin siteWidth {
  width        : 100%;
  max-width    : $template-width;
  justify-self : center;
}
@mixin GridLayout {
  display               : Grid;
  grid-template-columns : 1fr $template-width 1fr;
  grid-auto-rows        : auto;
  width                 : 100%;
  justify-self          : center;

  > * {
    grid-column : 2 / span 1;
    width       : 100%;
  }
  @media (max-width : $template-width + 20px) {
    grid-template-columns : $gap 1fr $gap;
  }
}
//-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
/*Gradients*/
@mixin gradient-1 {
  background : linear-gradient(180deg, #e5e4e2 0%, #f7f7f7 300%);
}
//-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
@function strip-unit($value) {
  @return $value / ($value * 0 + 1);
}
@mixin fluid-type($min-vw, $max-vw, $min-font-size, $max-font-size) {
  $u1 : unit($min-vw);
  $u2 : unit($max-vw);
  $u3 : unit($min-font-size);
  $u4 : unit($max-font-size);

  @if $u1 == $u2 and $u1 == $u3 and $u1 == $u4 {
    & {
      font-size : $min-font-size;
      @media screen and (min-width : $min-vw) {
        font-size : calc(#{$min-font-size} + #{strip-unit($max-font-size - $min-font-size)} * ((100vw - #{$min-vw}) / #{strip-unit($max-vw - $min-vw)}));
      }
      @media screen and (min-width : $max-vw) {
        font-size : $max-font-size;
      }
    }
  }
}
//-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
@mixin fluid($css-option,$min-vw, $max-vw, $min-font-size, $max-font-size) {
  $u1 : unit($min-vw);
  $u2 : unit($max-vw);
  $u3 : unit($min-font-size);
  $u4 : unit($max-font-size);
  $u5 : $css-option;

  @if $u1 == $u2 and $u1 == $u3 and $u1 == $u4 {
    & {
      #{$u5} : $min-font-size;
      @media screen and (min-width : $min-vw) {
        #{$u5} : calc(#{$min-font-size} + #{strip-unit($max-font-size - $min-font-size)} * ((100vw - #{$min-vw}) / #{strip-unit($max-vw - $min-vw)}));
      }
      @media screen and (min-width : $max-vw) {
        #{$u5} : $max-font-size;
      }
    }
  }
}
